1. fix the client to add functions.
2. client side timeout and handling, add sequence numbers to avoid duplicate requests. 
3. server side timeout and handling, it should handle the case where client is dead. Server needs a sequence number for each client. if server receives a request a second time, it should repeat the previous response. 
4. Clients and servers should have heartbeats to detect if the other side is dead.
5. Server serialization with lock. Dictionary. 


# LEADER:
 - notifies all followers before executing an action.
 - sends the log entry only. from raft node to raft node.
 - during init, server passes self to raft server instance.
 - followers execute action and then reply.
 - all followers are on the latest term.
 - leader sends heartbeats to all followers, asynchronously.

# LEADER CRASHES:
 - raft nodes get TCP error..
 - get random number from 1 to 10.
 - lowest number becomes leader.

# SERVER RECOVERS:
 - asks where leader is
 - RPC calls to restore state. 
 - does not participate in election.
